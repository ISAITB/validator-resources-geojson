# A comma-separated list of supported validation types.
validator.type = featurecol,feature,geometry,geometrycol,multipolygon,multiline,multipoint,polygon,line,point
# The description to show for the different validator types. These are defined in properties such as validator.typeLabel.TYPE.
validator.typeLabel.featurecol = GeoJSON FeatureCollection
validator.typeLabel.feature = GeoJSON Feature
validator.typeLabel.geometry = GeoJSON Geometry
validator.typeLabel.geometrycol = GeoJSON GeometryCollection
validator.typeLabel.multipolygon = GeoJSON MultiPolygon
validator.typeLabel.multiline = GeoJSON MultiLineString
validator.typeLabel.multipoint = GeoJSON MultiPoint
validator.typeLabel.polygon = GeoJSON Polygon
validator.typeLabel.line = GeoJSON LineString
validator.typeLabel.point = GeoJSON Point
# Whether or not user-provided schemas are allowed for the given validation type (added as a postfix). Possible values are (required, optional, none).
validator.externalSchemas.featurecol = optional
validator.externalSchemas.feature = optional
validator.externalSchemas.geometry = optional
validator.externalSchemas.geometrycol = optional
validator.externalSchemas.multipolygon = optional
validator.externalSchemas.multiline = optional
validator.externalSchemas.multipoint = optional
validator.externalSchemas.polygon = optional
validator.externalSchemas.line = optional
validator.externalSchemas.point = optional
# The JSONSchemas are remotely loaded.
validator.schemaFile.featurecol.remote.0.url = https://geojson.org/schema/FeatureCollection.json
validator.schemaFile.feature.remote.0.url = https://geojson.org/schema/Feature.json
validator.schemaFile.geometry.remote.0.url = https://geojson.org/schema/Geometry.json
validator.schemaFile.geometrycol.remote.0.url = https://geojson.org/schema/GeometryCollection.json
validator.schemaFile.multipolygon.remote.0.url = https://geojson.org/schema/MultiPolygon.json
validator.schemaFile.multiline.remote.0.url = https://geojson.org/schema/MultiLineString.json
validator.schemaFile.multipoint.remote.0.url = https://geojson.org/schema/MultiPoint.json
validator.schemaFile.polygon.remote.0.url = https://geojson.org/schema/Polygon.json
validator.schemaFile.line.remote.0.url = https://geojson.org/schema/LineString.json
validator.schemaFile.feature.point.0.url = https://geojson.org/schema/Point.json
# Labels
validator.label.typeLabel = GeoJSON type
validator.uploadTitle = GeoJSON validator
# Configurable HTML banner replacing the text title.
validator.bannerHtml = <div style="display: table;"><div style="display: table-cell; padding-left: 20px; vertical-align: middle;"><h1 style="cursor: pointer;" onclick="window.location.href='upload'">GeoJSON validator</h1><p style="margin-top: 30px;">This service allows you to validate JSON objects against the <a href="https://geojson.org/" target="_blank">GeoJSON specification</a> (<a href="https://github.com/geojson/schema" target="_blank">JSON format</a>). Provide additional JSON schemas to make custom checks on the metadata and content of your specific events.</p><p>This service is also available via <a href="https://www.itb.ec.europa.eu/json/soap/geojson/validation?wsdl" target="_blank">SOAP API</a>. Feedback and questions can be sent via email to <a href="mailto:DIGIT-ITB@ec.europa.eu">DIGIT-ITB@ec.europa.eu</a>.</p></div></div>